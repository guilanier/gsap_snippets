<snippet>
	<content><![CDATA[
const st = ScrollTrigger.create({
  trigger: ${1:'.my-element'},
  ${2:animation: tl || tween,}
  start: ${3:'top top'},
  end: ${4:'bottom bottom'},
  scrub: true, // or time (in seconds) to catch up

  ${5:onEnter: () => console.log('onEnter'),  // Start the animation here,
  onLeave: () => console.log('onLeave'),  // Stop the animation here,
  onToggle: (trigger) => console.log('onToggle', trigger.isActive),  // ,
  onUpdate: (trigger) => console.log('onUpdate', trigger.progress),}  // update here,
  toggleActions: "play none none reset",// 4 distinct toggle places - onEnter, onLeave, onEnterBack, and onLeaveBack,

  ${6:pin: true, // Boolean | String | Element 
  pinSpacer: // Element
  pinSpacing: true,}
}
})$0
]]></content>
	<!-- Optional: Set a tabTrigger to define how to trigger the snippet -->
	<tabTrigger>gsap:scrollTrigger:standalone</tabTrigger>
	<!-- Optional: Set a scope to limit where the snippet will trigger -->
	<scope>source.js</scope>
</snippet>
