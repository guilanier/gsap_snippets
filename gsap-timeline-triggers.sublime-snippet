<snippet>
	<content><![CDATA[
const triggers = [
    { startAt: 1, endAt: 2.4, from: 0, to: 0.1, ease: 'power2.inOut' },
];
const tweensObjs = triggers.map((obj, i) => ({
    ${1:property}: 0
}));

const tl = (this.tl = new gsap.timeline({
    paused: true,
    onUpdate: () => {
        const total = tweensObjs.reduce((accum, obj) => accum + obj.${1:property}, 0);
        this.props.${2:output} = total;
    }
}));
triggers.forEach((trigger, i) => {
    const { startAt, endAt, from, to, ease } = trigger;
    tl.fromTo(
        tweensObjs[i],
        { ${1:property}: from },
        { ${1:property}: to, duration: ${2:endAt - startAt}, ease },
        startAt
    );
});
${3:this.props.tlDuration = tl.totalDuration()};
$0
]]></content>
	<description>use with `this.tl.progress(t / this.props.tlDuration);`</description>
	<tabTrigger>gsap:timeline:triggers</tabTrigger>	
	<scope>source.js</scope>
</snippet>
